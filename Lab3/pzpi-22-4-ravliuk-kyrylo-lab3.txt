Харківський університет радіоелектроніки Факультет комп'ютерних наук
Кафедра програмної інженерії






ЗВІТ

з лабораторного заняття №3
з дисципліни  «Архітектура програмного забезпечення»
на тему: «Web застосунок»






Виконав ст. гр ПЗПІ-22-4

Равлюк Кирило Станіславович



Перевірив

асистент кафедри ПІ 
Дашенков Дмитро Сергійович





Харків 2025
1 МЕТА РОБОТИ

Метою даної лабораторної роботи є розробка веб-застосунку на основі бібліотеки React, який буде частиною програмної системи контролю здачі та переробки сміття. Застосунок призначений для адміністраторів системи та забезпечує інтерфейс для управління сутностями, перегляду статистики, отримання звітів та взаємодії з серверною частиною системи.

2 ХІД РОБОТИ

У ході виконання лабораторної роботи було створено веб-застосунок на основі фреймворку React, який є адміністративною панеллю системи контролю здачі та переробки сміття. Цей інструмент розроблено для адміністраторів з метою централізованого керування усіма ключовими сутностями системи. Основна функціональність охоплює повний спектр CRUD-операцій (створення, читання, оновлення, видалення) над такими об'єктами, як користувачі, станції, контейнери, статуси, ролі, графіки збору сміття, типи контейнерів, датчики тощо.
Зокрема, для управління користувачами реалізовано можливість їх перегляду, видалення, зміни ролей, а також додавання, редагування та видалення самих ролей. У розділі керування станціями передбачено функціонал додавання нових станцій, зміни їх статусу та видалення. Окремо реалізовано управління статусами станцій — адміністратор може створювати, змінювати або видаляти доступні статуси.
Щодо контейнерів, у системі передбачено створення нового контейнера, зміна його типу, а також можливість його видалення. Типи контейнерів та їхні статуси адміністратор також може редагувати, додавати нові чи видаляти існуючі.
У модулі керування датчиками реалізовано функціонал їх перегляду, додавання та видалення. У розділі графіків збору сміття передбачено можливість оновлення дати збору, додавання нових графіків, а також їх видалення за потреби.
Важливою особливістю застосунку є інтерактивна мапа, яка відображає всі станції з можливістю перегляду інформації про них. Найважливіший функціонал цієї частини — можливість додавання нової станції безпосередньо з мапи.
Також реалізовано систему звітності, яка включає формування звітів про популярність станцій, типи контейнерів та графіки вивезення сміття, де зазначено дати й обсяги вивезень. Окремо передбачено функцію отримання резервної копії бази даних для збереження цілісності системної інформації.
Додатково веб-застосунок підтримує багатомовність — інтерфейс доступний українською та англійською мовами, а також реалізовано локалізацію часу для відображення дат у відповідному форматі залежно від вибраної мови.
Уся взаємодія веб-застосунку з серверною частиною системи відбувається через REST API, що забезпечує стабільну синхронізацію та надійний обмін даними між клієнтською частиною й сервером. Таким чином, розроблена адміністративна панель є важливим компонентом програмної системи, що забезпечує зручне та ефективне управління її структурними елементами.


ВИСНОВКИ

У процесі виконання лабораторної роботи, окрім мобільного застосунку, було також розроблено веб-застосунок на базі фреймворку React, який виконує роль адміністративної панелі програмної системи контролю здачі та переробки сміття. Адмінпанель реалізує повноцінний функціонал для управління всіма ключовими складовими системи: користувачами, ролями, станціями, контейнерами, їхніми статусами та типами, графіками збору сміття, а також датчиками.
Забезпечено можливість роботи з інтерактивною картою, яка дозволяє не лише переглядати розташування станцій та отримувати про них інформацію, але й додавати нові станції безпосередньо з мапи. Окрім того, адміністратор має доступ до аналітичних звітів, зокрема щодо популярності станцій, типів контейнерів та графіків вивезення сміття. Реалізовано функцію формування резервної копії бази даних, що сприяє підвищенню надійності зберігання даних.
Особливу увагу приділено підтримці багатомовності (українська та англійська мови) та локалізації формату дат, що забезпечує комфортне використання системи для різних користувачів. Комунікація веб-застосунку з серверною частиною відбувається через REST API, що забезпечує стабільну синхронізацію та ефективний обмін даними між компонентами системи.
Результатом роботи стало створення сучасного, функціонального та масштабованого веб-застосунку, який суттєво розширює можливості адміністрування та управління екосистемою збору та переробки сміття, забезпечуючи зручний інтерфейс та високу ефективність адміністрування системи.

























ДОДАТОК А 
UML - діаграму прецедентів для веб - клієнту

 
  Рисунок А.1 - UML-діаграма прецедентів (частина 1).

 
Рисунок А.2 - UML-діаграма прецедентів (частина 2).
 
Рисунок А.3 - UML-діаграма прецедентів (частина 3).

 
Рисунок А.4 - UML-діаграма прецедентів (частина 4).


 
Рисунок А.5 - UML-діаграма прецедентів (частина 5).


















ДОДАТОК Б
UML - діаграма компонентів для мобільного клієнту

 
Рисунок Б.1 - UML-діаграма компонентів (частина 1).

 
Рисунок Б.2 - UML-діаграма компонентів (частина 2).

 
Рисунок Б.3 - UML-діаграма компонентів (частина 3).


















ДОДАТОК В
UML - діаграма діяльності для мобільного клієнту

 
Рисунок В.1 - UML-діаграма діяльності для зміни дати графіку збору.







ДОДАТОК Г
UML - діаграму діяльності для веб - клієнту

 
Рисунок Г.1 - UML - діаграму діяльності для створення резевної копії бази даних.

